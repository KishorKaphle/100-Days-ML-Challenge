#making sure that dataset is present
import pandas as pd
df = pd. read_csv ('Heart Fail Prediction.csv')
print (df.head())
print ('\n Death events:\n',df['DEATH_EVENT'])


import seaborn as sns
sns.pairplot(df, hue = 'DEATH_EVENT')

# splitting the data into training and testing set


features = ['age', 'anaemia', 'creatinine_phosphokinase', 'diabetes', 'ejection_fraction', 'high_blood_pressure', 'platelets',
            'serum_creatinine', 'serum_sodium', 'sex', 'smoking', 'time']

X = df [features]
y = df ['DEATH_EVENT']

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 109)

# Importing the SVM model

from sklearn import svm

#creating svm classifier

clfr = svm.SVC(kernel = 'linear') # using linear kernel

#training the model using the training sets

clfr.fit(X_train, y_train)


# predicting the outcomes from the testing dataset

y_pred = clfr.predict(X_test)


#evaluating the model

from sklearn import metrics

print ('\n Accuracy: ', metrics.accuracy_score(y_test, y_pred))
print ('\n Precision: ', metrics.precision_score(y_test, y_pred))
print ('\n Recall:', metrics.recall_score(y_test, y_pred))

